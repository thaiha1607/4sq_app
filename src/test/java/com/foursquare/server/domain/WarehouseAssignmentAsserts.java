package com.foursquare.server.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WarehouseAssignmentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarehouseAssignmentAllPropertiesEquals(WarehouseAssignment expected, WarehouseAssignment actual) {
        assertWarehouseAssignmentAutoGeneratedPropertiesEquals(expected, actual);
        assertWarehouseAssignmentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarehouseAssignmentAllUpdatablePropertiesEquals(WarehouseAssignment expected, WarehouseAssignment actual) {
        assertWarehouseAssignmentUpdatableFieldsEquals(expected, actual);
        assertWarehouseAssignmentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarehouseAssignmentAutoGeneratedPropertiesEquals(WarehouseAssignment expected, WarehouseAssignment actual) {
        assertThat(expected)
            .as("Verify WarehouseAssignment auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarehouseAssignmentUpdatableFieldsEquals(WarehouseAssignment expected, WarehouseAssignment actual) {
        assertThat(expected)
            .as("Verify WarehouseAssignment relevant properties")
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getNote()).as("check note").isEqualTo(actual.getNote()))
            .satisfies(e -> assertThat(e.getOtherInfo()).as("check otherInfo").isEqualTo(actual.getOtherInfo()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarehouseAssignmentUpdatableRelationshipsEquals(WarehouseAssignment expected, WarehouseAssignment actual) {
        assertThat(expected)
            .as("Verify WarehouseAssignment relationships")
            .satisfies(e -> assertThat(e.getSourceWorkingUnit()).as("check sourceWorkingUnit").isEqualTo(actual.getSourceWorkingUnit()))
            .satisfies(e -> assertThat(e.getTargetWorkingUnit()).as("check targetWorkingUnit").isEqualTo(actual.getTargetWorkingUnit()))
            .satisfies(e -> assertThat(e.getInternalOrder()).as("check internalOrder").isEqualTo(actual.getInternalOrder()));
    }
}
