package com.foursquare.server.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InternalOrderAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInternalOrderAllPropertiesEquals(InternalOrder expected, InternalOrder actual) {
        assertInternalOrderAutoGeneratedPropertiesEquals(expected, actual);
        assertInternalOrderAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInternalOrderAllUpdatablePropertiesEquals(InternalOrder expected, InternalOrder actual) {
        assertInternalOrderUpdatableFieldsEquals(expected, actual);
        assertInternalOrderUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInternalOrderAutoGeneratedPropertiesEquals(InternalOrder expected, InternalOrder actual) {
        assertThat(expected)
            .as("Verify InternalOrder auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInternalOrderUpdatableFieldsEquals(InternalOrder expected, InternalOrder actual) {
        assertThat(expected)
            .as("Verify InternalOrder relevant properties")
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getNote()).as("check note").isEqualTo(actual.getNote()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInternalOrderUpdatableRelationshipsEquals(InternalOrder expected, InternalOrder actual) {
        assertThat(expected)
            .as("Verify InternalOrder relationships")
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getRootOrder()).as("check rootOrder").isEqualTo(actual.getRootOrder()));
    }
}
