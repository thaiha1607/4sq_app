package com.foursquare.server.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ColourAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertColourAllPropertiesEquals(Colour expected, Colour actual) {
        assertColourAutoGeneratedPropertiesEquals(expected, actual);
        assertColourAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertColourAllUpdatablePropertiesEquals(Colour expected, Colour actual) {
        assertColourUpdatableFieldsEquals(expected, actual);
        assertColourUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertColourAutoGeneratedPropertiesEquals(Colour expected, Colour actual) {
        assertThat(expected)
            .as("Verify Colour auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertColourUpdatableFieldsEquals(Colour expected, Colour actual) {
        assertThat(expected)
            .as("Verify Colour relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getHexCode()).as("check hexCode").isEqualTo(actual.getHexCode()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertColourUpdatableRelationshipsEquals(Colour expected, Colour actual) {}
}
