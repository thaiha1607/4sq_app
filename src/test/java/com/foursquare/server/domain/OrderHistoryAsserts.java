package com.foursquare.server.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OrderHistoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderHistoryAllPropertiesEquals(OrderHistory expected, OrderHistory actual) {
        assertOrderHistoryAutoGeneratedPropertiesEquals(expected, actual);
        assertOrderHistoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderHistoryAllUpdatablePropertiesEquals(OrderHistory expected, OrderHistory actual) {
        assertOrderHistoryUpdatableFieldsEquals(expected, actual);
        assertOrderHistoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderHistoryAutoGeneratedPropertiesEquals(OrderHistory expected, OrderHistory actual) {
        assertThat(expected)
            .as("Verify OrderHistory auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderHistoryUpdatableFieldsEquals(OrderHistory expected, OrderHistory actual) {
        assertThat(expected)
            .as("Verify OrderHistory relevant properties")
            .satisfies(e -> assertThat(e.getNote()).as("check note").isEqualTo(actual.getNote()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderHistoryUpdatableRelationshipsEquals(OrderHistory expected, OrderHistory actual) {
        assertThat(expected)
            .as("Verify OrderHistory relationships")
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getOrder()).as("check order").isEqualTo(actual.getOrder()));
    }
}
