package com.foursquare.server.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ConversationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConversationAllPropertiesEquals(Conversation expected, Conversation actual) {
        assertConversationAutoGeneratedPropertiesEquals(expected, actual);
        assertConversationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConversationAllUpdatablePropertiesEquals(Conversation expected, Conversation actual) {
        assertConversationUpdatableFieldsEquals(expected, actual);
        assertConversationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConversationAutoGeneratedPropertiesEquals(Conversation expected, Conversation actual) {
        assertThat(expected)
            .as("Verify Conversation auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConversationUpdatableFieldsEquals(Conversation expected, Conversation actual) {
        assertThat(expected)
            .as("Verify Conversation relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConversationUpdatableRelationshipsEquals(Conversation expected, Conversation actual) {}
}
