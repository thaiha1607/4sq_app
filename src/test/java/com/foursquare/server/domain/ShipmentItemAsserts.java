package com.foursquare.server.domain;

import static com.foursquare.server.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class ShipmentItemAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipmentItemAllPropertiesEquals(ShipmentItem expected, ShipmentItem actual) {
        assertShipmentItemAutoGeneratedPropertiesEquals(expected, actual);
        assertShipmentItemAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipmentItemAllUpdatablePropertiesEquals(ShipmentItem expected, ShipmentItem actual) {
        assertShipmentItemUpdatableFieldsEquals(expected, actual);
        assertShipmentItemUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipmentItemAutoGeneratedPropertiesEquals(ShipmentItem expected, ShipmentItem actual) {
        assertThat(expected)
            .as("Verify ShipmentItem auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipmentItemUpdatableFieldsEquals(ShipmentItem expected, ShipmentItem actual) {
        assertThat(expected)
            .as("Verify ShipmentItem relevant properties")
            .satisfies(e -> assertThat(e.getQty()).as("check qty").isEqualTo(actual.getQty()))
            .satisfies(e -> assertThat(e.getTotal()).as("check total").usingComparator(bigDecimalCompareTo).isEqualTo(actual.getTotal()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertShipmentItemUpdatableRelationshipsEquals(ShipmentItem expected, ShipmentItem actual) {
        assertThat(expected)
            .as("Verify ShipmentItem relationships")
            .satisfies(e -> assertThat(e.getOrderItem()).as("check orderItem").isEqualTo(actual.getOrderItem()))
            .satisfies(e -> assertThat(e.getShipment()).as("check shipment").isEqualTo(actual.getShipment()));
    }
}
