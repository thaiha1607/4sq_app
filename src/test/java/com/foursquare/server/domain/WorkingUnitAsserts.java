package com.foursquare.server.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WorkingUnitAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkingUnitAllPropertiesEquals(WorkingUnit expected, WorkingUnit actual) {
        assertWorkingUnitAutoGeneratedPropertiesEquals(expected, actual);
        assertWorkingUnitAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkingUnitAllUpdatablePropertiesEquals(WorkingUnit expected, WorkingUnit actual) {
        assertWorkingUnitUpdatableFieldsEquals(expected, actual);
        assertWorkingUnitUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkingUnitAutoGeneratedPropertiesEquals(WorkingUnit expected, WorkingUnit actual) {
        assertThat(expected)
            .as("Verify WorkingUnit auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkingUnitUpdatableFieldsEquals(WorkingUnit expected, WorkingUnit actual) {
        assertThat(expected)
            .as("Verify WorkingUnit relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getImageUri()).as("check imageUri").isEqualTo(actual.getImageUri()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkingUnitUpdatableRelationshipsEquals(WorkingUnit expected, WorkingUnit actual) {
        assertThat(expected)
            .as("Verify WorkingUnit relationships")
            .satisfies(e -> assertThat(e.getAddress()).as("check address").isEqualTo(actual.getAddress()));
    }
}
